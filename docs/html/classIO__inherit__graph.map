<map id="IO" name="IO">
<area shape="rect" id="node1" title="FatFS interface definition &lt;&gt;" alt="" coords="409,5,448,32"/>
<area shape="rect" id="node2" href="$classBaseIO.html" title="Empty IO implementation that we can use to test the compilation." alt="" coords="256,80,324,107"/>
<area shape="rect" id="node7" href="$classMultiIO.html" title="File system driver which supports multiple drives: Add the drivers by calling add() then call mount()..." alt="" coords="349,80,418,107"/>
<area shape="rect" id="node8" href="$classRamIO.html" title="The data is stored in RAM. In a ESP32 when PSRAM has been activated we store it is PSRAM." alt="" coords="442,80,509,107"/>
<area shape="rect" id="node9" href="$classStreamIO.html" title="template class which expects a Stream class which provides the following additional methods" alt="" coords="533,80,655,107"/>
<area shape="rect" id="node3" href="$classSDArduinoSPIIO.html" title="Accessing a SD card via the Arduino SPI API." alt="" coords="5,155,129,181"/>
<area shape="rect" id="node4" href="$classSDBitBangSPIIO.html" title="Accessing a SD card via SPI using bit banging." alt="" coords="154,155,279,181"/>
<area shape="rect" id="node5" href="$classSDSPISTM32IO.html" title="SPI interface for STM32 microcontrollers." alt="" coords="304,155,423,181"/>
<area shape="rect" id="node6" href="$classSDSTM32DiskIO.html" title="Depending on the usecase, the SD card initialization could be done at the application level,..." alt="" coords="447,155,573,181"/>
</map>
